@{
  ViewData["Title"] = "Home Page";
}
<p>
    Welcome to our page! Please log in in order to use capabilities of this page:
</p>

<fieldset>
    <legend>Login</legend>
    <table>
        <tr>
            <td><label for="loginInput">Login:</label></td>
            <td><input name="loginName" id="loginInput" type="text" /></td>
        </tr>
        <tr>
            <td><label for="passwordInput">Password:</label></td>
            <td><input name="passwordInput" id="passwordInput" type="password" /></td>
            <!-- WAŻNE: zawsze dajemy type dla button (jego domyślne zachowanie to submit, który przy formie ją wysyła!) -->
        </tr>
        <tr>
            <td>
                <button id="authBtn" class="btn" onclick="handleLogin()" type="button">Login</button>
            </td><!-- Tak możemy się pozbyć niechcianych białych znaków między tagami i mieć czysty kod.
         --><td>
                <button id="createNewUser" class="btn" onclick="window.location.href='@Url.Action("Create", "Users")'">Create New</button>
            </td>
        </tr>
    </table>
</fieldset>
@* Tutaj mamy przykład, w którym dane z formy będa przekazane do zdef. przez nas akcji Contact w kontrolerze Home.
<form method="post" action="@Url.Action("Contact", "Home")">
    <input name="exampleText" value="test text" />
    <input type="submit" />
</form>*@
<script>
    @*Tutaj wczytujemy dane z ktnotrolera.
        *@
    hostUrl = '@Url.Action("AuthenticateUser","Home")';

    let buttonClickAction = (event) => {
        event.preventDefault();
        if (event.keyCode === 13) {
            document.getElementById("authBtn").click();
        };
    }
    document.getElementById("loginInput").addEventListener("keyup", buttonClickAction);
    document.getElementById("passwordInput").addEventListener("keyup", buttonClickAction);
</script>